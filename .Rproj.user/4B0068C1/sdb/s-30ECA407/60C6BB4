{
    "contents" : "nVaR = function(x, p = 0.99, n = NULL){\n  if (!is.null(n)){\n      nr = nrow(x)\n      return(qnorm(1-p, mean(x[(nr - n + 1):nr]), sd(x[(nr - n + 1):nr])))\n  }else{\n      return(qnorm(1-p, mean(x), sd(x)))\n  }\n}\napply.rolling2 = function (R, width, trim = TRUE, gap = 12, by = 1, FUN = \"mean\", \n                           ...) \n{\n  #R = checkData(R)\n  #R = na.omit(R)\n  rows = NROW(R)\n  cols = NCOL(R)\n  result = xts(, order.by = time(R))\n  dates = time(R)\n  calcs = matrix(ncol = cols)\n  if (width == 0) {\n    gap = gap\n  }\n  else gap = width\n  steps = seq(from = rows, to = gap, by = -by)\n  steps = steps[order(steps)]\n  for (row in steps) {\n    if (width == 0) \n      r = R[1:row, ]\n    else r = R[(row - width + 1):row, ]\n    calc = apply(r, MARGIN = 2, FUN = FUN, ... = ...)\n    calcs = rbind(calcs, calc)\n  }\n  calcs = xts(calcs[-1,], order.by = dates[steps])\n  result = merge(result, calcs)\n  result = reclass(result, R)\n  return(result)\n}\n\nnVaRBounds = function(x, p = 0.99, n = 126){\n  result = merge.xts(x, apply.rolling2(x, n, FUN = \"nVaR\", p = p), apply.rolling2(x, n, FUN = \"nVaR\", p = 1-p))\n  names(result)[1:3] = c(\"DailyReturn\",paste(\"VaR\", p, sep = \"_\"), paste(\"VaR\", 1-p, sep = \"_\"))\n  return(result)\n}\nnVaRExceptions = function(x, p=0.99, n=126){\n  rollingVaR = nVaRBounds(x, p = p, n = n)\n  return(rollingVaR[which(rollingVaR$DailyReturn < rollingVaR$VaR_0.99 | rollingVaR$DailyReturn > rollingVaR$VaR_0.01),])\n}",
    "created" : 1452312903349.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2226466008",
    "id" : "60C6BB4",
    "lastKnownWriteTime" : 1452282969,
    "path" : "C:/Users/Bryan/Dropbox/R/VaR Functions.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}